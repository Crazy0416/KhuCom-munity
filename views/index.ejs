
<%- layout('base') %>

<script src="js/echarts.min.js"></script>
<script src="js/echarts-wordcloud.min.js"></script>

<!-- Begin page heading -->
<h1 class="page-heading">경희대학교 컴퓨터공학과 <small>를 위한 커뮤니티</small></h1>
<!-- End page heading -->

  <!-- BEGIN EXAMPLE ALERT -->
  <div class="alert alert-warning alert-bold-border fade in alert-dismissable">
    <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
    <p><strong>안녕하세요!</strong></p>
    <p class="text-muted">경희대학교 컴퓨터공학과의 소통을 위해 만들어진 <a class="alert-link">커뮤니티</a>입니다.
      교내외 많은 정보 얻어가시고 서로 즐겁게 소통할 수 있는 공간이 되었으면 좋겠어요!
      <i class="fa fa-smile-o"></i></p>
  </div>
  <!-- END EXAMPLE ALERT -->

<div class="row">
  <div class="col-md-6">
    <h4 class="text-center small-heading more-margin-bottom">컴공인에게 Hot !</h4>
    <div id="main" style="width: 100%; height: 100%"> </div>
  </div>
  <div class="col-md-6">
    <h4 class="text-center small-heading more-margin-bottom">최근 게시물</h4>
    <div class="the-box">
      <h4 class="small-title">OWL CAROUSEL AUTOPLAY</h4>
      <div id="owl-lazy-load-autoplay" class="owl-carousel">
        <div class="item"><img class="lazyOwl" src="img/photo/small/img.jpg" alt="Lazy Owl Image"></div>
      </div><!-- /#owl-lazy-load-autoplay -->
    </div><!-- /.the-box -->
  </div>
</div>

<script type="text/javascript">
    var chart = echarts.init(document.getElementById('main'));

    chart.setOption({
        series: [{
        type: 'wordCloud',

        // The shape of the "cloud" to draw. Can be any polar equation represented as a
        // callback function, or a keyword present. Available presents are circle (default),
        // cardioid (apple or heart shape curve, the most known polar equation), diamond (
        // alias of square), triangle-forward, triangle, (alias of triangle-upright, pentagon, and star.

        shape: 'circle',

        // Folllowing left/top/width/height/right/bottom are used for positioning the word cloud
        // Default to be put in the center and has 75% x 80% size.

        left: 'center',
        top: 'center',
        width: '100%',
        height: '100%',
        right: null,
        bottom: null,

        // Text size range which the value in data will be mapped to.
        // Default to have minimum 12px and maximum 60px size.

        sizeRange: [12, 60],

        // Text rotation range and step in degree. Text will be rotated randomly in range [-90, 90] by rotationStep 45

        rotationRange: [-90, 90],
        rotationStep: 45,

        // size of the grid in pixels for marking the availability of the canvas
        // the larger the grid size, the bigger the gap between words.

        gridSize: 8,

        // set to true to allow word being draw partly outside of the canvas.
        // Allow word bigger than the size of the canvas to be drawn
        drawOutOfBound: false,

        // Global text style
        textStyle: {
            normal: {
                fontFamily: 'serif',
                fontWeight: 'bold',
                // Color can be a callback function or a color string
                color: function () {
                    // Random color
                    return 'rgb(' + [
                        Math.round(Math.random() * 160),
                        Math.round(Math.random() * 160),
                        Math.round(Math.random() * 160)
                    ].join(',') + ')';
                }
            },
            emphasis: {
                shadowBlur: 10,
                shadowColor: '#333'
            }
        },

        // Data is an array. Each array item must have name and value property.
        data: [{
            name: '컴공',
            value: 30,
        },{
            name: '설D',
            value: 40,
        },{
            name: '되네?',
            value: 15,
        },{
            name: '개이득!',
            value: 10,
        },{
            name: '오예!!!!!!!',
            value: 10,
        },{
            name: 'why!!!!!',
            value: 5,
        }]
    }]
    });
</script>
